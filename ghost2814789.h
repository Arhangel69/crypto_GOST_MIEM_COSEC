#ifndef IMITOVSTAVKA_GHOST2814789_H
#define IMITOVSTAVKA_GHOST2814789_H

#define CYCLIC_PITCH 11
#define L_ 32

#include <cstdint>
#include <string>
#include <cstring>

#include <iostream>

namespace crypto
{
    void splitBlocks(const uint32_t block, uint8_t splitMassive[4]);
    uint32_t unsplitBlocks(const uint8_t splitMassive[4]);
    uint64_t stringToInt(const std::string& text);
    //GOST2814789 with Magma
    class ghost2814789
    {
    private:
        uint32_t Ai_;
        uint32_t Ai1_;
        uint32_t Bi_;
        uint32_t Bi1_;

        // random generated key
        const uint8_t key_full_[32] = {0xF7, 0x72, 0x31, 0x6B, 0x22, 0x5C, 0x45, 0xA1, 0x2C, 0xB5, 0xB6, 0x20, 0x7A, 0x04,
                                 0x2D,
                                 0xCA, 0xAD, 0x2A, 0x63, 0x3E, 0x26, 0x19, 0xD3, 0x73, 0x49, 0x57, 0xB0, 0x27, 0x19,
                                 0xF9,
                                 0x6B, 0x97};
        const uint32_t KEYS_[8] = {0xF772316B, 0x225C45A1, 0x2CB5B620, 0x7A042DCA, 0xAD2A633E, 0x2619D373, 0x4957B027,
                             0x19F96B97};

        // S-block id-GostR3411-94-TestParamSet

        const uint8_t sBlock_[8][16] = {{0x4, 0xA, 0x9, 0x2, 0xD, 0x8, 0x0, 0xE, 0x6, 0xB, 0x1, 0xC, 0x7, 0xF, 0x5, 0x3},
                                  {0xE, 0xB, 0x4, 0xC, 0x6, 0xD, 0xF, 0xA, 0x2, 0x3, 0x8, 0x1, 0x0, 0x7, 0x5, 0x9},
                                  {0x5, 0x8, 0x1, 0xD, 0xA, 0x3, 0x4, 0x2, 0xE, 0xF, 0xC, 0x7, 0x6, 0x0, 0x9, 0xB},
                                  {0x7, 0xD, 0xA, 0x1, 0x0, 0x8, 0x9, 0xF, 0xE, 0x4, 0x6, 0xC, 0xB, 0x2, 0x5, 0x3},
                                  {0x6, 0xC, 0x7, 0x1, 0x5, 0xF, 0xD, 0x8, 0x4, 0xA, 0x9, 0xE, 0x0, 0x3, 0xB, 0x2},
                                  {0x4, 0xB, 0xA, 0x0, 0x7, 0x2, 0x1, 0xD, 0x3, 0x6, 0x8, 0x5, 0x9, 0xC, 0xF, 0xE},
                                  {0xD, 0xB, 0x4, 0x1, 0x3, 0xF, 0x5, 0x9, 0x0, 0xA, 0xE, 0x7, 0x6, 0x8, 0x2, 0xC},
                                  {0x1, 0xF, 0xD, 0x0, 0x5, 0x7, 0xA, 0x4, 0x9, 0x2, 0x3, 0xE, 0x6, 0xB, 0x8, 0xC}};

        uint64_t simple_replacement(const uint8_t num_of_rounds);

        uint32_t func_f(const uint32_t A_cur, const uint32_t X_key);

        uint32_t get_key(const uint8_t current_round);

        uint32_t replaceS_block(const uint32_t result);

        uint32_t cyclicShift(const uint32_t sBlock, const uint8_t numShift);

        void setAiBi(const std::string& blockText);

        void setAiBi(const uint64_t num);

        uint32_t choosingImitationInsert(const uint64_t evaluationResult, const uint8_t L);

    public:
        ghost2814789();

        ~ghost2814789();

        uint32_t imitovstavka(const std::string& openText);

        uint32_t get_imit_from_text(const std::string& textWithImit);

        std::string get_open_text_from_text_with_imit(const std::string& textWithImit);

        bool check_imitovstavka(const std::string& textWithImit);

        void reset();
    };

}
#endif //IMITOVSTAVKA_GHOST2814789_H

